arnaud@probook:~$ sudo -u postgres psql
psql (15.13 (Debian 15.13-0+deb12u1))
Saisissez « help » pour l'aide.

postgres=# \c lasicroom2
Vous êtes maintenant connecté à la base de données « lasicroom2 » en tant qu'utilisateur « postgres ».
lasicroom2=# \dt
              Liste des relations
 Schéma |      Nom       | Type  | Propriétaire 
--------+----------------+-------+--------------
 public | accompagnement | table | postgres
 public | artiste        | table | postgres
 public | concert        | table | postgres
 public | reservation    | table | postgres
 public | utilisateur    | table | postgres
(5 lignes)

lasicroom2=# \d accompagnement
                                                Table « public.accompagnement »
    Colonne    |            Type             | Collationnement | NULL-able |                     Par défaut                     
---------------+-----------------------------+-----------------+-----------+----------------------------------------------------
 id_demande    | integer                     |                 | not null  | nextval('accompagnement_id_demande_seq'::regclass)
 nom_artiste   | character varying(100)      |                 | not null  | 
 email_artiste | character varying(100)      |                 | not null  | 
 style_musical | character varying(100)      |                 |           | 
 message       | text                        |                 |           | 
 date_envoi    | timestamp without time zone |                 |           | CURRENT_TIMESTAMP
 traite        | boolean                     |                 |           | false
Index :
    "accompagnement_pkey" PRIMARY KEY, btree (id_demande)

lasicroom2=# \d artiste
                                              Table « public.artiste »
    Colonne    |          Type          | Collationnement | NULL-able |                 Par défaut                  
---------------+------------------------+-----------------+-----------+---------------------------------------------
 id_artiste    | integer                |                 | not null  | nextval('artiste_id_artiste_seq'::regclass)
 nom_artiste   | character varying(100) |                 | not null  | 
 style_musical | character varying(100) |                 |           | 
 description   | text                   |                 |           | 
 photo         | character varying(255) |                 |           | 
 lien_video    | character varying(255) |                 |           | 
Index :
    "artiste_pkey" PRIMARY KEY, btree (id_artiste)
Référencé par :
    TABLE "concert" CONSTRAINT "fk_artiste" FOREIGN KEY (id_artiste) REFERENCES artiste(id_artiste) ON DELETE SET NULL

lasicroom2=# \d concert
                                                   Table « public.concert »
       Colonne       |            Type             | Collationnement | NULL-able |                 Par défaut                  
---------------------+-----------------------------+-----------------+-----------+---------------------------------------------
 id_concert          | integer                     |                 | not null  | nextval('concert_id_concert_seq'::regclass)
 titre               | character varying(100)      |                 | not null  | 
 description         | text                        |                 |           | 
 date_concert        | timestamp without time zone |                 | not null  | 
 nb_places_total     | integer                     |                 | not null  | 
 nb_places_restantes | integer                     |                 | not null  | 
 tarif_plein         | numeric(6,2)                |                 | not null  | 
 tarif_abonne        | numeric(6,2)                |                 | not null  | 
 id_artiste          | integer                     |                 |           | 
Index :
    "concert_pkey" PRIMARY KEY, btree (id_concert)
Contraintes de clés étrangères :
    "fk_artiste" FOREIGN KEY (id_artiste) REFERENCES artiste(id_artiste) ON DELETE SET NULL
Référencé par :
    TABLE "reservation" CONSTRAINT "reservation_id_concert_fkey" FOREIGN KEY (id_concert) REFERENCES concert(id_concert) ON DELETE CASCADE

lasicroom2=# \d reservation
                                                    Table « public.reservation »
     Colonne      |            Type             | Collationnement | NULL-able |                     Par défaut                      
------------------+-----------------------------+-----------------+-----------+-----------------------------------------------------
 id_reservation   | integer                     |                 | not null  | nextval('reservation_id_reservation_seq'::regclass)
 date_reservation | timestamp without time zone |                 |           | CURRENT_TIMESTAMP
 id_utilisateur   | integer                     |                 | not null  | 
 id_concert       | integer                     |                 |           | 
 type_tarif       | character varying(20)       |                 | not null  | 
 montant          | numeric(6,2)                |                 | not null  | 
Index :
    "reservation_pkey" PRIMARY KEY, btree (id_reservation)
Contraintes de vérification :
    "reservation_type_tarif_check" CHECK (type_tarif::text = ANY (ARRAY['plein'::character varying, 'abonne'::character varying]::text[]))
Contraintes de clés étrangères :
    "reservation_id_concert_fkey" FOREIGN KEY (id_concert) REFERENCES concert(id_concert) ON DELETE CASCADE
    "reservation_id_utilisateur_fkey" FOREIGN KEY (id_utilisateur) REFERENCES utilisateur(id_utilisateur) ON DELETE CASCADE
Triggers :
    trg_decrementer_places AFTER INSERT ON reservation FOR EACH ROW EXECUTE FUNCTION decrementer_places_restantes()

lasicroom2=# \d utilisateur
                                                Table « public.utilisateur »
    Colonne     |          Type          | Collationnement | NULL-able |                     Par défaut                      
----------------+------------------------+-----------------+-----------+-----------------------------------------------------
 id_utilisateur | integer                |                 | not null  | nextval('utilisateur_id_utilisateur_seq'::regclass)
 nom            | character varying(100) |                 | not null  | 
 email          | character varying(100) |                 | not null  | 
 mot_de_passe   | character varying(255) |                 | not null  | 
 role           | character varying(50)  |                 | not null  | 
Index :
    "utilisateur_pkey" PRIMARY KEY, btree (id_utilisateur)
    "utilisateur_email_key" UNIQUE CONSTRAINT, btree (email)
Contraintes de vérification :
    "utilisateur_role_check" CHECK (role::text = ANY (ARRAY['utilisateur'::character varying, 'admin'::character varying]::text[]))
Référencé par :
    TABLE "reservation" CONSTRAINT "reservation_id_utilisateur_fkey" FOREIGN KEY (id_utilisateur) REFERENCES utilisateur(id_utilisateur) ON DELETE CASCADE

lasicroom2=# 
