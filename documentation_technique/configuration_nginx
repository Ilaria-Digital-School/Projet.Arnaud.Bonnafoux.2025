# 🔁 Redirection HTTP vers HTTPS
server {
    listen 80; # Écoute sur le port HTTP
    listen [::]:80; # Écoute en IPv6 aussi sur le port HTTP
    server_name _; # "_" signifie : pour n’importe quel nom de domaine

    return 301 https://$host$request_uri; # Redirige tout le trafic HTTP vers HTTPS
}

# 🔒 HTTPS (sécurisé)
server {
    listen 443 ssl; # Écoute sur le port HTTPS (IPv4)
    listen [::]:443 ssl; # Écoute sur le port HTTPS (IPv6)
    server_name _;  # "_" = valeur par défaut si aucun autre "server_name" ne correspond

    # 📄 Certificat SSL avec Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/lasicroom.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lasicroom.duckdns.org/privkey.pem;

    # 📂 Racine du site (build React déjà compilé)
    root /home/arnaud/Bureau/lasicroom_projet_fil_rouge/lasicroom_front/build;
    index index.html; # Fichier par défaut à servir si aucun fichier n’est spécifié

    # 🔐 Politique CSP (Content Security Policy)
    # Restreint les sources de scripts, styles, images, etc. pour limiter les attaques XSS
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-src 'self' https://www.youtube.com https://widget.deezer.com; media-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';" always;

    # 🔒 Autres en-têtes de sécurité
    add_header X-Content-Type-Options "nosniff" always; # Empêche l'interprétation incorrecte du type MIME
    add_header X-Frame-Options "DENY" always; # Interdit l’intégration du site dans une iframe
    add_header X-XSS-Protection "1; mode=block" always; # Active l’anti-XSS du navigateur
    add_header Referrer-Policy "strict-origin-when-cross-origin" always; # Contrôle l’envoi du header "Referer"
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always; # Désactive certaines API du navigateur


    # 📦 Redirection du trafic vers l’API backend Node.js (ex : Express)
    location /api/ {
        proxy_pass http://localhost:3001; # Redirige /api/ vers le backend Node.js
        proxy_http_version 1.1; # Utilise HTTP/1.1 pour maintenir les connexions
        proxy_set_header Host $host; # Passe l’host du client
        proxy_set_header X-Real-IP $remote_addr;# Passe l’IP réelle du client
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Passe la chaîne des IP
        proxy_set_header X-Forwarded-Proto $scheme; # Indique si HTTPS ou HTTP
    }

    # 🖼️ Gestion des images uploadées (servies par le backend)
    location /photos_artistes/ {
        proxy_pass http://localhost:3001;
    }

    # 🌐 Gestion des routes React (SPA)
    # Si le fichier demandé n’existe pas (ex : /dashboard, /profile),
    # Nginx renvoie "index.html" pour que React gère le routage côté client
    location / {
        try_files $uri /index.html;
    }
}
